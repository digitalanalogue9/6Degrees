@model SixDegrees.Models.GraphEditModel
@* Required so you have extention methods for client timings *@
@using StackExchange.Profiling;
@{
    ViewBag.Title = "Edit " + Model.Graph.Name;
}
@section foot{
    @MiniProfiler.RenderIncludes(position: RenderPosition.Right, useExistingjQuery: true)
}
@section scripts
    {
    @this.TimeScript("controller",
        @<script src="@Url.Content("~/Scripts/application/home.edit.chirp.js")" type="text/javascript"></script>)
}
@section navigation
{
    <li><a href="/Home/Index">Home</a></li>
    <li><a href="/Home/Create">Create</a></li>
    <li><a href="/Home/Demo">Demo</a></li>
    <li><a href="/Home/About">About</a></li>
}
<div class="row">
    <div class="span12">
        <h2>
            Edit "@Html.Raw(Model.Graph.Name)" - with a file or on-screen</h2>
    </div>
</div>
<form action="/Home/EditWithNewFile" method="post" enctype="multipart/form-data"
class="form-inline">
<div class="row">
    <div class="span6">
        <input type="hidden" name="editid" id="editid" value="@Model.Graph.Id.Replace("graphs/", string.Empty)" />
        <input type="text" name="name" id="name" class="input-xxlarge" placeholder="Name" value="@Html.Raw(Model.Graph.Name)" />
    </div>
    <div class="span5">
        <input type="file" class="hide" name="file" id="file" />
        <div class="input-append">
            <input id="filenametext" class="input-xlarge" type="text" placeholder="File" />
            <a class="btn" id="filenamebutton">Browse</a>
        </div>
        <select class="input-xsmall" name="delimiter">
            <option value="," selected="selected">,</option>
            <option value=";">;</option>
            <option value="||">||</option>
            <option value="-">-</option>
        </select>
    </div>
    <div class="span1">
        <div class="pull-right">
            <input type="submit" id="step1button" name="step1button" class="btn btn-primary"
                value="Upload file" />
        </div>
    </div>
</div>
</form>
<form action="/Home/Edit" method="post">
<div class="row">
    <div class="span6">
        <input type="hidden" name="id" id="id" value="@Model.Graph.Id" />
        <input type="text" name="name" id="name" class="input-xxlarge" placeholder="Name" value="@Html.Raw(Model.Graph.Name)" />
    </div>
    <div class="span6">
        <div class="pull-right" id="editbuttoncontainer">
            <a title="View the last saved graph" target="_blank" href="@string.Format("/Home/ViewGraph/{0}", Model.Graph.Id.Replace("graphs/", string.Empty))" class="btn btn-success">
                View</a>
            <input type="submit" id="savebutton" name="submit" class="btn btn-primary" value="Save" />
            <input type="button" id="deletebutton" name="deletebutton" class="btn btn-danger"
                value="Delete" />
            <a target="_blank" href="@string.Format("/Home/GetFile/{0}", Model.Graph.Id.Replace("graphs/", string.Empty))" class="btn btn-inverse">
                Download</a>
        </div>
    </div>
</div>
<div id="accordion">
    @for (var x = 0; x < Model.Graph.nodes.Count; x++)
    {
        <h3>
            <a href="#">@Model.Graph.nodes[x].name</a></h3>
        <div>
            <div class="row">
                <div class="span3">
                    <input type="hidden" name="@string.Format("nodes[" + x + "].id")" id="@string.Format("nodes_" + x + "_id")" value="@Model.Graph.nodes[x].id" />
                    <label for="@string.Format("nodes_" + x + "_name")">
                        Name</label>
                    <input class="input-xlarge" type="text" name="@string.Format("nodes[" + x + "].name")" id="@string.Format("nodes_" + x + "_name")" value="@Model.Graph.nodes[x].name" />
                    <label for="@string.Format("nodes_" + x + "_itemtype")">
                        Type</label>
                    <input class="input-xlarge" type="text" name="@string.Format("nodes[" + x + "].itemtype")" id="@string.Format("nodes_" + x + "_itemtype")" value="@Model.Graph.nodes[x].data["itemtype"]" />
                </div>
                <div class="span4">
                    <label for="@string.Format("nodes_" + x + "_name")">
                        Description</label>
                    <textarea class="input-xlarge" rows="5" cols="80" name="@string.Format("nodes[" + x + "].description")" id="@string.Format("nodes_" + x + "_description")">@Model.Graph.nodes[x].data["description"]</textarea>
                </div>
                <div class="span4">
                    <label for="@string.Format("nodes_" + x + "_name")">
                        Connections</label>
                    <textarea class="input-xlarge" rows="5" cols="80" name="@string.Format("nodes[" + x + "].other")" id="@string.Format("nodes_" + x + "_other")">@Model.Graph.nodes[x].data["other"]</textarea>
                </div>
            </div>
        </div>
    }
</div>
</form>
<form action="/Home/Delete" method="post" id="deleteform">
<input type="hidden" name="deleteid" id="deleteid" value="@Model.Graph.Id.Replace("graphs/", string.Empty)" />
</form>
